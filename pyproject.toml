[tool.poetry]
name = "fastapi-motor-skeleton"
version = "0.0.0"
description = "Template Project for FastAPI and Motor"
authors = ["Ilsun Hong <ilsun.hong@deliveryhero.co.kr>"]

[tool.poetry.dependencies]
fastapi = "^0.68.0"
httpx = "^0.19.0"
motor = "^2.5.1"
python = "^3.9.6"
requests = "^2.26.0"
starlette-context = "^0.3.3"
toml = "^0.10.2"
uvicorn = { extras = ["standard"], version = "^0.15.0" }
pymongo = "^3.12.0"

[tool.poetry.dev-dependencies]
asgi-lifespan = "^1.0.1"
black = "^21.7b0"
coverage = "^5.5"
flake8 = "^3.9.2"
isort = "^5.9.3"
mypy = "^0.910"
pylint = "^2.10.2"
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-benchmark = "^3.4.1"
pytest-mock = "^3.6.1"
types-toml = "^0.1.5"

[tool.black]
# Ref. https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"

[tool.mypy]
# Ref. https://mypy.readthedocs.io/en/stable/config_file.html
python_version = 3.9
strict = true
exclude = ".venv"
plugins = "pydantic.mypy"
disallow_subclassing_any = false
ignore_missing_imports = true
implicit_reexport = true
show_error_codes = true

[tool.coverage.run]
branch = true
source = ["app"]
omit = [".venv/**/*", ".mypy_cache/**/*", ".pytest_cache/**/*"]

[tool.coverage.report]
show_missing = true
# fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pass",
    "except Exception as error:",
    "def __repr__",
    "if __name__ == \"__main__\":",
    "raise NotImplementedError"]

[tool.pytest.ini_options]
# Ref. https://docs.pytest.org/en/6.2.x/reference.html#configuration-options
log_cli = false
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s %(levelname)s [%(name)s] [%(filename)s:%(lineno)d] - %(message)s"
log_cli_level = "DEBUG"
testpaths = ["tests"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "duplicate-code",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-name-in-module",
    "raise-missing-from",
    "redefined-builtin",
    "redefined-outer-name",
    "too-few-public-methods",
    "too-many-function-args",
    "too-many-locals"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
